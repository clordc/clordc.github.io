<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>About me</title>
    <url>/2023/05/07/About-me/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>P4入门（一）</title>
    <url>/2023/05/29/P4%E5%85%A5%E9%97%A8%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h1 id="P4入门（一）"><a href="#P4入门（一）" class="headerlink" title="P4入门（一）"></a>P4入门（一）</h1><h2 id="PISA和openflow"><a href="#PISA和openflow" class="headerlink" title="PISA和openflow"></a>PISA和openflow</h2><p>openflow和P4都基于Programmable Hardwares（可编程硬件）的理念。openflow是再Control Plane（控制层）实时改写switch和router上的路由表。但是openflow存在许多问题，于是Protocol Independent Switch Architecture（PISA）诞生，从更底层入手把packet的转发最基础的过程高度抽象化，消除了openflow存在的很多问题。它的图示如下:<br><img src="https://raw.githubusercontent.com/clordc/blogImage/master/images/20230527101427.png" alt="PISA"></p>
<h2 id="P4简介"><a href="#P4简介" class="headerlink" title="P4简介"></a>P4简介</h2><p>P4是一种类似C语言的静态语言。代码文件的基本样式如下：<br><img src="https://raw.githubusercontent.com/clordc/blogImage/master/images/20230527101940.png" alt="20230527101940"></p>
<ul>
<li>Libraries: 类似C语言的库文件;</li>
<li>Declarations：定义基本数据结构，支持typedef;</li>
<li>Parse packet headers：放置解析headers的代码;</li>
<li>Control flow：代码的逻辑部分，定义Match-Action functions，按照定义的规则修改网络包里的内容（这里只有Ingress部分，还会有Egress部分）;</li>
<li>Assemble: Deparser部分把前面修改好的部分重新组装为一个新的packet转发;</li>
<li>main: 将定义好的部分按正确的顺序调用<ul>
<li>一般为三段式：Parser-&gt;Match-Action Pipeline-&gt;Deparser</li>
</ul>
</li>
</ul>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>本篇简单介绍了P4的背景，架构，它的出现就是方便我们在不那么“灵活”的硬件上编写自己设计的“灵活”protocol。</p>
]]></content>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2023/05/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
</search>
